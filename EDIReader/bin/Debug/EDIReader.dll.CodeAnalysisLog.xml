<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft fxcop 10.0\Xml\FxCopReport.xsl"?>
<FxCopReport Version="10.0">
 <Namespaces>
  <Namespace Name="EDIReader.IO">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'EDIReader.IO' with another namespace.</Issue>
    </Message>
    <Message Id="EDI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EDI' in namespace name 'EDIReader.IO' by changing it to 'Edi'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EDIReader.X12">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'EDIReader.X12' with another namespace.</Issue>
    </Message>
    <Message Id="EDI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EDI' in namespace name 'EDIReader.X12' by changing it to 'Edi'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\bin\Debug\EDIReader.dll">
   <Modules>
    <Module Name="edireader.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EDIReader.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="EDI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'EDI' in assembly name 'EDIReader.dll' by changing it to 'Edi'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EDIReader.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EDIReader.X12">
       <Types>
        <Type Name="Segment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.ObjectModel.Collection`1&lt;EDIReader.X12.Segment&gt;,System.Int32&amp;,EDIReader.X12.SegmentInfo,EDIReader.X12.Segment)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="358">Consider a design that does not require that 'i' be a reference parameter.</Issue>
            </Message>
            <Message Id="Parent" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="358">In member 'Segment.Segment(Collection&lt;Segment&gt;, ref int, SegmentInfo, Segment)', correct the casing of 'Parent' in parameter name 'Parent' by changing it to 'parent'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="358">In method 'Segment.Segment(Collection&lt;Segment&gt;, ref int, SegmentInfo, Segment)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message Id="t" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="358">In method 'Segment.Segment(Collection&lt;Segment&gt;, ref int, SegmentInfo, Segment)', consider providing a more meaningful name than parameter name 't'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="346">Replace method 'Segment.Segment(string, long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Line" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="346">In member 'Segment.Segment(string, long)', correct the casing of 'Line' in parameter name 'LineNumber' by changing it to 'line'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#elementAsNumber(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="element" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="437">Correct the casing of 'element' in member name 'Segment.elementAsNumber(int)' by changing it to 'Element'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="315">Correct the casing of 'ID' in member name 'Segment.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoopID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="328">Correct the casing of 'ID' in member name 'Segment.LoopID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MissingRequiredChildren()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="446">Change 'List&lt;SegmentInfo&gt;' in 'Segment.MissingRequiredChildren()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Repeat" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Repeat()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int16.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="331">Because the behavior of 'short.ToString()' could vary based on the current user's locale settings, replace this call in 'Segment.Repeat.get()' with a call to 'short.ToString(IFormatProvider)'. If the result of 'short.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#replaceElement(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="replace" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="459">Correct the casing of 'replace' in member name 'Segment.replaceElement(int, string)' by changing it to 'Replace'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SecondaryIDOptions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="333">Correct the casing of 'ID' in member name 'Segment.SecondaryIDOptions' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="333">Change 'Segment.SecondaryIDOptions' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SegmentInfo" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'SegmentInfo' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'SegmentInfo' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="x12File" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'x' in type name 'x12File' by changing it to 'X'.</Issue>
          </Message>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'x12File' because it creates members of the following IDisposable types: 'StreamReader'. If 'x12File' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="107">Replace method 'x12File.x12File(string, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="107">In member 'x12File.x12File(string, string, bool)', correct the casing of 'Format' in parameter name 'FormatGuide' by changing it to 'format'.</Issue>
            </Message>
            <Message Id="Hold" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="107">In member 'x12File.x12File(string, string, bool)', correct the casing of 'Hold' in parameter name 'HoldSegmentData' by changing it to 'hold'.</Issue>
            </Message>
            <Message Id="Input" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="107">In member 'x12File.x12File(string, string, bool)', correct the casing of 'Input' in parameter name 'InputFile' by changing it to 'input'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#elementDelimiter" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'x12File.elementDelimiter' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindSegments(System.Collections.Generic.IEnumerable`1&lt;EDIReader.X12.Segment&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Search" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'x12File.FindSegments(IEnumerable&lt;Segment&gt;, string)', correct the casing of 'Search' in parameter name 'SearchText' by changing it to 'search'.</Issue>
            </Message>
            <Message Id="Segments" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'x12File.FindSegments(IEnumerable&lt;Segment&gt;, string)', correct the casing of 'Segments' in parameter name 'Segments' by changing it to 'segments'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindSegments(System.String,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;EDIReader.X12.Segment&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'x12File.FindSegments(string, int, string, string, IEnumerable&lt;Segment&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Element" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'x12File.FindSegments(string, int, string, string, IEnumerable&lt;Segment&gt;)', correct the casing of 'Element' in parameter name 'ElementNumber' by changing it to 'element'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'x12File.FindSegments(string, int, string, string, IEnumerable&lt;Segment&gt;)', correct the casing of 'ID' in parameter name 'SecondaryID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Secondary" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'x12File.FindSegments(string, int, string, string, IEnumerable&lt;Segment&gt;)', correct the casing of 'Secondary' in parameter name 'SecondaryID' by changing it to 'secondary'.</Issue>
            </Message>
            <Message Id="Segment" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'x12File.FindSegments(string, int, string, string, IEnumerable&lt;Segment&gt;)', correct the casing of 'Segment' in parameter name 'SegmentList' by changing it to 'segment'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'x12File.FindSegments(string, int, string, string, IEnumerable&lt;Segment&gt;)', correct the casing of 'Segment' in parameter name 'SegmentType' by changing it to 'segment'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Format" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'x12File.Format' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatGuide" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'x12File.FormatGuide' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'x12File.GE' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'x12File.GS' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IEA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'x12File.IEA' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ISA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'x12File.ISA' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LineCount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'x12File.LineCount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lineTerminator" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'x12File.lineTerminator' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Segments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Segments(System.Collections.Generic.IEnumerable`1&lt;EDIReader.X12.Segment&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="94">'x12File.Segments.set(IEnumerable&lt;Segment&gt;)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#subDelimiter" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'x12File.subDelimiter' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#toX12()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="to" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'to' in member name 'x12File.toX12()' by changing it to 'To'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#toX12File(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="to" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="188">Correct the casing of 'to' in member name 'x12File.toX12File(string)' by changing it to 'To'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Version" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'x12File.Version' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="X12Format" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'X12Format' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-15 14:24:07Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Users\dcv3016\Documents\Visual Studio 2012\Projects\EDIReader\EDIReader\X12" File="x12Reader.cs" Line="500">In member 'X12Format.X12Format(string)', correct the casing of 'Format' in parameter name 'FormatGuide' by changing it to 'format'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
